{"version":3,"sources":["components/Current.js","components/Forecast.js","components/WeatherCard.js","components/Nav.js","components/Footer.js","components/assets/js/WeatherData.js","App.js","index.js"],"names":["Current","props","data","isMetric","location","time","TIME","Number","last_updated","split","bg","className","temp_c","temp_f","condition","text","country","humidity","wind_kph","wind_mph","Forecast","WeatherCard","useContext","Store","context","current","forecast","weekday","Nav","date","Date","display","toLocaleDateString","undefined","year","month","day","state","setState","getDay","type","onClick","e","target","checked","Footer","rel","href","title","KEY","getWeatherData","IP","a","fetch","then","res","json","imperial","includes","global","React","createContext","App","useState","setContext","useEffect","Data","METRIC","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.380cd91a.chunk.js","sourcesContent":["import './assets/css/Current.css'\r\n\r\n//https://coolors.co/5c03fa\r\n\r\nfunction getCurrentBackground(time){\r\n    if((time >= 0 && time <= 5) || (time >= 20 && time <= 24)){ // night\r\n        return 'night';\r\n    }\r\n    else if((time >= 9 && time <= 17)){\r\n        return 'day';\r\n    }\r\n    else{\r\n        return 'middle';\r\n    }\r\n}\r\n\r\nexport default function Current(props){\r\n    const { data, isMetric, location } = props;\r\n    if(!data)  return <div></div>\r\n    const TIME = Number(data && data.last_updated?data.last_updated.split(' ')[1].split(':')[0]:0);\r\n    const bg = getCurrentBackground(TIME);\r\n    return(\r\n        <div className={`content ${bg}`}>\r\n            <div className=\"current\">\r\n                <div>\r\n                    <div className=\"degree\">{isMetric? data.temp_c+'C' : data.temp_f+'F'}ยบ</div>\r\n                    <div className=\"condition spacing\">{(data && data.condition)?data.condition.text:''}</div>\r\n                </div>\r\n                <div className=\"location\">{location.country}</div>\r\n            </div>\r\n            <div className=\"metaData\">\r\n                <div>\r\n                    <div className=\"humidity spacing\">HUMIDITY</div>\r\n                    <div>{data.humidity}%</div>\r\n                </div>\r\n                <div className=\"line-break\"></div>\r\n                <div>\r\n                    <div className=\"wind spacing\">WIND</div>\r\n                    <div>{isMetric? data.wind_kph : data.wind_mph} <span className=\"condition spacing\">{isMetric? ' KM/H' : 'M/H'}</span></div>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}","import Item from './Item';\r\n\r\n\r\nexport default function Forecast(props){\r\n    return(\r\n        <div></div>\r\n    )\r\n}","import { React, useContext} from 'react';\r\nimport './assets/css/WeatherCard.css';\r\n\r\nimport Current from './Current';\r\nimport Forecast from './Forecast';\r\n\r\nimport { Store } from '../App';\r\n\r\nexport default function WeatherCard (props){\r\n\r\n    const [context] = useContext(Store);\r\n    \r\n    return (\r\n        <div className=\"frame\">\r\n            <Current data={context.current} isMetric={context.isMetric} location={context.location} />\r\n            <Forecast data={context.forecast} isMetric={context.isMetric}/>\r\n        </div>\r\n    )\r\n    \r\n}\r\n","import './assets/css/Nav.css';\r\nimport { Store } from '../App';\r\nimport { useContext } from 'react';\r\n\r\nvar weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\nfunction Nav(){\r\n    const date = new Date();\r\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" }\r\n\r\n    const display = ` , ${date.toLocaleDateString(undefined, options)}`;\r\n    const [state, setState] = useContext(Store);\r\n\r\n    function handleClick(e){\r\n        setState({\r\n            ...state,\r\n            isMetric: !e.target.checked,\r\n        });\r\n        \r\n    }\r\n    return(\r\n        <div className=\"nav nav-style\">\r\n            <div>\r\n                <span className=\"logo\"></span>\r\n                <span className=\"title\">Live Weather</span>\r\n            </div>\r\n            <div>\r\n                <span className=\"bold\">\r\n                    {weekday[date.getDay()]}\r\n                </span>\r\n                {display}\r\n            </div>\r\n            <div className=\"check\">\r\n                Metric\r\n                <label className=\"switch\">\r\n                    <input type=\"checkbox\" onClick={handleClick} checked={!state.isMetric}/>\r\n                    <span className=\"slider round\"></span>\r\n                </label>\r\n                Imperial\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import './assets/css/Nav.css'\r\n\r\nexport default function Footer (props){\r\n\r\n    return(\r\n        <div className=\"footer nav-style\">\r\n            <div>Icons made by <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.flaticon.com/authors/those-icons\" title=\"Those Icons\">Those Icons</a> from <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n        </div>\r\n    )\r\n}\r\n","const KEY = '2e0151e5466a45649d1105746201312';\r\n\r\nexport function getIP(){\r\n    return fetch('https://www.cloudflare.com/cdn-cgi/trace')\r\n    .then(res => res.text())\r\n    .then(data => {\r\n        let IP = data.split('\\n')[2].split('=')[1];\r\n        return IP;\r\n    });\r\n}\r\n\r\nexport async function getWeatherData(IP){\r\n return fetch(`http://api.weatherapi.com/v1/forecast.json?key=${KEY}&q=${IP}&days=5`)\r\n .then(res => res.json())\r\n .then(data => data)\r\n}\r\n\r\nexport async function isMetric({country}){  \r\n    const imperial = ['United States of America', 'Liberia', 'Myanmar']\r\n    return ! imperial.includes(country);\r\n}\r\n","import WeatherCard from './components/WeatherCard';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport React, { useState, useEffect } from 'react';\nimport { getIP, getWeatherData, isMetric } from './components/assets/js/WeatherData';\n\nimport './App.css'\n\nconst global = {\n  isMetric: false,\n  IP: undefined,\n  current: {},\n  forecast: {},\n  location: {},\n}\n\nexport const Store = React.createContext(global);\n\nfunction App() {\n\n  const [context, setContext] = useState(Store);\n  useEffect(() =>{\n    (async () => {\n      const IP =  await getIP();\n      const Data =  await getWeatherData(IP); \n      const METRIC = await isMetric(Data.location);\n      await setContext({\n          ...context, \n          IP,\n          current: Data.current,\n          forecast: Data.forecast,\n          location: Data.location,\n          isMetric: METRIC,\n      });\n    })();\n  }, []);\n\n  return (\n    <Store.Provider value={[context, setContext]}>\n      <div className=\"page style\">\n        <Nav />\n        <WeatherCard />\n        <Footer />\n      </div>\n    </Store.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}